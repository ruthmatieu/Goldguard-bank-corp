{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/ruthmathieu/Desktop/Lambda School/BW-Unit-3/front-end/src/utils/PrivateRoute.js\";\nimport React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\"; //must have same API as <Route/>\n//renders a <Route/> and passes all the props through to it\n//it checks if the user is authenticated, if so renders rhe comp prop if not renders o homepage\n\nconst PrivateRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  const token = window.localStorage.getItem('token');\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => {\n      if (token) {\n        return /*#__PURE__*/_jsxDEV(Component, { ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 18\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 18\n        }, this);\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\n_c = PrivateRoute;\nexport default PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["/Users/ruthmathieu/Desktop/Lambda School/BW-Unit-3/front-end/src/utils/PrivateRoute.js"],"names":["React","Route","Redirect","PrivateRoute","component","Component","rest","token","window","localStorage","getItem","props"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC,C,CAEA;AACA;AACA;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAD,KAAuC;AAE1D,QAAMC,KAAK,GAAGC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,OAA5B,CAAd;AAEA,sBACE,QAAC,KAAD,OACMJ,IADN;AAEE,IAAA,MAAM,EAAEK,KAAK,IAAI;AACf,UAAIJ,KAAJ,EAAW;AACT,4BAAO,QAAC,SAAD,OAAeI;AAAf;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAFD,MAEO;AACL,4BAAO,QAAC,QAAD;AAAU,UAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD;AACF;AARH;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAhBD;;KAAMR,Y;AAkBN,eAAeA,YAAf","sourcesContent":["import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\n//must have same API as <Route/>\n//renders a <Route/> and passes all the props through to it\n//it checks if the user is authenticated, if so renders rhe comp prop if not renders o homepage\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n\n  const token = window.localStorage.getItem('token');\n\n  return (\n    <Route\n      {...rest}\n      render={props => {\n        if (token) {\n          return <Component {...props} />;\n        } else {\n          return <Redirect to='/error' />;\n        }\n      }}\n    />\n  );\n};\n\nexport default PrivateRoute;\n"]},"metadata":{},"sourceType":"module"}