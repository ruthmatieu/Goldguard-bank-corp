{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/ruthmathieu/Desktop/Lambda School/BW-Unit-3/front-end/src/utils/PrivateRoute.js\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom'; //have tha same API interface as Route\n//render a <Route/> and passes all props\n//if logged in, checks if user is authenticated routes to /dashboard otherwise redirects to homepage\n\nconst PrivateRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  //if token is in localStorage, render the component\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => {\n      if (localStorage.getItem('token')) {\n        return /*#__PURE__*/_jsxDEV(Component, { ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 28\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 28\n        }, this);\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n};\n\n_c = PrivateRoute;\nexport default PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["/Users/ruthmathieu/Desktop/Lambda School/BW-Unit-3/front-end/src/utils/PrivateRoute.js"],"names":["React","Route","Redirect","PrivateRoute","component","Component","rest","props","localStorage","getItem"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC,C,CAEA;AACA;AACA;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAD,KAAsC;AACvD;AACA,sBACI,QAAC,KAAD,OACQA,IADR;AAEI,IAAA,MAAM,EAAKC,KAAD,IAAW;AACjB,UAAIC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAJ,EAAmC;AAC/B,4BAAO,QAAC,SAAD,OAAeF;AAAf;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH,OAFD,MAEO;AACH,4BAAO,QAAC,QAAD;AAAU,UAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH;AACJ;AARL;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CAdD;;KAAMJ,Y;AAgBN,eAAeA,YAAf","sourcesContent":["import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\n//have tha same API interface as Route\n//render a <Route/> and passes all props\n//if logged in, checks if user is authenticated routes to /dashboard otherwise redirects to homepage\n\nconst PrivateRoute = ({ component: Component, ...rest}) => {\n    //if token is in localStorage, render the component\n    return(\n        <Route \n            {...rest}\n            render = {(props) => {\n                if (localStorage.getItem('token')) {\n                    return <Component {...props}/>\n                } else {\n                    return <Redirect to='/'/>\n                }\n            }}\n        />\n    );\n};\n\nexport default PrivateRoute;"]},"metadata":{},"sourceType":"module"}